{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\diego\\\\Desktop\\\\paradigmas-proyecto-final\\\\EIF400_II-2023_OFS2\\\\src\\\\components\\\\TextEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../App.css';\nimport KeywordChecker from './KeywordChecker';\nimport ScriptPopup from './ScriptPopup'; // Importa el componente ScriptPopup aquí\n\nimport { API_SERVER_URL } from './Url';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TextEditor = ({\n  keywordsList\n}) => {\n  _s();\n  const [inputText, setInputText] = useState('');\n  const [outputText, setOutputText] = useState('');\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  const handleClear = () => {\n    const confirmed = window.confirm('Are you sure you want to clear the text?');\n    if (confirmed) {\n      setInputText('');\n      setOutputText('');\n    }\n  };\n  const handleInputChange = e => {\n    const newText = e.target.value;\n    const words = newText.split(/\\s+/);\n\n    // This nasty imperative loop should be rewritten using FP!\n    let processedText = '';\n    for (let word of words) {\n      const trimmedWord = word.trim();\n      if (keywordsList.includes(trimmedWord)) {\n        processedText += `${trimmedWord} `;\n      }\n    }\n    setInputText(newText);\n    setOutputText(processedText);\n  };\n  const handleSendToServer = () => {\n    // \n    fetch(`${API_SERVER_URL}/process`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        text: inputText\n      })\n    }).then(response => response.json()).then(data => setOutputText(data.result)).catch(error => console.error('Error sending data to server:', error));\n  };\n  const handleSaveScript = () => {\n    setIsPopupOpen(true);\n  };\n\n  // Esta función se llamará cuando el usuario ingrese el nombre del script en el popup\n  const handleSaveScriptPopup = scriptName => {\n    // Crea un objeto con el nombre del script y el texto de entrada\n    const newScript = {\n      name: scriptName,\n      text: inputText\n    };\n\n    // Envía el nuevo script al servidor\n    fetch(`${API_SERVER_URL}/scripts`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newScript)\n    }).then(response => response.json()).then(data => {\n      setOutputText(data.message);\n      setIsPopupOpen(false); // Cierra el popup después de guardar el script\n    }).catch(error => console.error('Error sending data to server:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"custom-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      id: \"TI\",\n      className: \"custom-textarea\",\n      value: inputText,\n      onChange: handleInputChange,\n      placeholder: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"arrow\",\n      children: \"\\u2192\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      id: \"TO\",\n      className: \"custom-textarea bg-black text-white\",\n      readOnly: true,\n      value: outputText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(KeywordChecker, {\n      text: inputText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"custom-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClear,\n        children: \"Clear All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendToServer,\n        children: \"Send to Server\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSaveScript,\n        style: {\n          backgroundColor: 'lightblue'\n        },\n        children: \"Save Script\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), isPopupOpen && /*#__PURE__*/_jsxDEV(ScriptPopup, {\n      onSave: handleSaveScriptPopup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_s(TextEditor, \"LCvEw//mUwoSVZ1+k/CbhkVuowk=\");\n_c = TextEditor;\nexport default TextEditor;\nvar _c;\n$RefreshReg$(_c, \"TextEditor\");","map":{"version":3,"names":["React","useState","KeywordChecker","ScriptPopup","API_SERVER_URL","jsxDEV","_jsxDEV","TextEditor","keywordsList","_s","inputText","setInputText","outputText","setOutputText","isPopupOpen","setIsPopupOpen","handleClear","confirmed","window","confirm","handleInputChange","e","newText","target","value","words","split","processedText","word","trimmedWord","trim","includes","handleSendToServer","fetch","method","headers","body","JSON","stringify","text","then","response","json","data","result","catch","error","console","handleSaveScript","handleSaveScriptPopup","scriptName","newScript","name","message","className","children","id","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","readOnly","onClick","style","backgroundColor","onSave","_c","$RefreshReg$"],"sources":["C:/Users/diego/Desktop/paradigmas-proyecto-final/EIF400_II-2023_OFS2/src/components/TextEditor.js"],"sourcesContent":["import React, { useState } from 'react';\n\nimport '../App.css';\n\nimport KeywordChecker from './KeywordChecker'; \nimport ScriptPopup from './ScriptPopup'; // Importa el componente ScriptPopup aquí\n\n\nimport {API_SERVER_URL} from './Url';\n\n\nconst TextEditor = ({ keywordsList }) => { \n  const [inputText, setInputText] = useState('');\n  const [outputText, setOutputText] = useState('');\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n\n\n\n  const handleClear = () => {\n    const confirmed = window.confirm('Are you sure you want to clear the text?');\n    if (confirmed) {\n      setInputText('');\n      setOutputText('');\n    }\n  };\n\n  const handleInputChange = (e) => {\n      \n    const newText = e.target.value;\n    const words = newText.split(/\\s+/); \n    \n\n    // This nasty imperative loop should be rewritten using FP!\n    let processedText = '';\n    for (let word of words) {\n      const trimmedWord = word.trim();\n      if (keywordsList.includes(trimmedWord)) {\n        processedText += `${trimmedWord} `;\n      }\n    }\n\n    setInputText(newText);\n    setOutputText(processedText);\n  };\n  \n  const handleSendToServer = () => {\n    // \n    fetch(`${API_SERVER_URL}/process`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ text: inputText }),\n    })\n      .then((response) => response.json())\n      .then((data) => setOutputText(data.result))\n      .catch((error) => console.error('Error sending data to server:', error));\n  };\n\n  const handleSaveScript = () => {\n    setIsPopupOpen(true);\n  };\n\n  // Esta función se llamará cuando el usuario ingrese el nombre del script en el popup\n  const handleSaveScriptPopup = (scriptName) => {\n    // Crea un objeto con el nombre del script y el texto de entrada\n    const newScript = {\n      name: scriptName,\n      text: inputText,\n    };\n\n    // Envía el nuevo script al servidor\n    fetch(`${API_SERVER_URL}/scripts`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(newScript),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        setOutputText(data.message);\n        setIsPopupOpen(false); // Cierra el popup después de guardar el script\n      })\n      .catch((error) => console.error('Error sending data to server:', error));\n  };\n\n  \n  return (\n    <div className=\"custom-container\">\n      <textarea\n        id=\"TI\"\n        className=\"custom-textarea\"\n        value={inputText}\n        onChange={handleInputChange}\n        placeholder=\"\"\n      />\n      <div className=\"arrow\">→</div>\n      <textarea\n        id=\"TO\"\n        className=\"custom-textarea bg-black text-white\"\n        readOnly\n        value={outputText}\n      />\n      <KeywordChecker text={inputText} />\n      <div className=\"custom-buttons\">\n        <button onClick={handleClear}>Clear All</button>\n        <button onClick={handleSendToServer}>Send to Server</button>\n        <button onClick={handleSaveScript} style={{ backgroundColor: 'lightblue' }}>\n          Save Script\n        </button>\n      </div>\n      {isPopupOpen && <ScriptPopup onSave={handleSaveScriptPopup} />}\n    </div>\n  );\n};\n\nexport default TextEditor;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}